{"is_source_file": true, "format": "TypeScript", "description": "This file provides a notes management service abstraction for a note-taking application. It includes functions for listing, creating, updating, and deleting notes, with both localStorage and in-memory fallback implementations. The service is designed to be swappable for a real backend later.", "external_files": ["notesService.api.ts", "~/types/note"], "external_methods": ["typeof window", "window.localStorage.getItem", "window.localStorage.setItem", "crypto.randomUUID", "Date.now"], "published": ["listNotes", "getNote", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "function safeNowIso(): string { safeNowIso", "description": "Returns the current timestamp in ISO 8601 format, or fall back to a timestamp string if an error occurs.", "scope": "", "scopeKind": ""}, {"name": "function hasLocalStorage(): boolean { hasLocalStorage", "description": "Checks if the environment supports localStorage by verifying window object and localStorage availability.", "scope": "", "scopeKind": ""}, {"name": "function loadAll(): Note[] { loadAll", "description": "Loads all notes from localStorage if available, otherwise returns a copy of the in-memory store.", "scope": "", "scopeKind": ""}, {"name": "function persistAll(notes: Note[]) { persistAll", "description": "Persists the provided notes array to localStorage and updates the in-memory store.", "scope": "", "scopeKind": ""}, {"name": "function cryptoRandomId(): string { cryptoRandomId", "description": "Generates a crypto-secure random ID, with a fallback to Math.random-based ID if crypto API not available.", "scope": "", "scopeKind": ""}, {"name": "function sortByUpdatedDesc(a: Note, b: Note) { sortByUpdatedDesc", "description": "Sort helper to order notes by updatedAt timestamp in descending order.", "scope": "", "scopeKind": ""}, {"name": "export async function listNotes(): Promise<Note[]> { listNotes", "description": "Asynchronously returns all notes sorted by updatedAt descending.", "scope": "", "scopeKind": ""}, {"name": "export async function getNote(id: string): Promise<Note | undefined> { getNote", "description": "Asynchronously retrieves a single note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(payload: CreatePayload = {}): Promise<Note> { createNote", "description": "Creates a new note with optional title and content, auto-assigns ID and timestamp, and adds it to the store.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote( updateNote", "description": "Updates an existing note identified by ID with new title and/or content, and updates the timestamp.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: string): Promise<boolean> { deleteNote", "description": "Deletes a note by its ID from the store.", "scope": "", "scopeKind": ""}], "calls": ["loadAll()", "persistAll()", "window.localStorage.getItem()", "window.localStorage.setItem()", "crypto.randomUUID()", "Date.now()"], "search-terms": ["notesService", "localStorage", "note CRUD", "ID generator", "Notes app"], "state": 2, "file_id": 19, "knowledge_revision": 60, "git_revision": "", "revision_history": [{"39": ""}, {"60": ""}], "ctags": [{"_type": "tag", "name": "CreatePayload", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^type CreatePayload = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^const STORAGE_KEY = \"notes_app__notes_v1\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "UpdatePayload", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^type UpdatePayload = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "changed", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const changed = filtered.length !== notes.length;$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^    content:$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^export async function createNote(payload: CreatePayload = {}): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "cryptoRandomId", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^function cryptoRandomId(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "current", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const current = notes[idx];$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^export async function deleteNote(id: string): Promise<boolean> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "filtered", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const filtered = notes.filter((n) => n.id !== id);$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^export async function getNote(id: string): Promise<Note | undefined> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "hasLocalStorage", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^function hasLocalStorage(): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const current = notes[idx];$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const idx = notes.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^export async function listNotes(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "loadAll", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^function loadAll(): Note[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "memoryStore", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^let memoryStore: Note[] = [$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "newNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const newNote: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const notes = loadAll().sort(sortByUpdatedDesc);$/", "language": "TypeScript", "kind": "constant", "scope": "listNotes", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const notes = loadAll();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const notes = loadAll();$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const notes = loadAll();$/", "language": "TypeScript", "kind": "constant", "scope": "getNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const notes = loadAll();$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const now = safeNowIso();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^    const parsed = JSON.parse(raw) as Note[];$/", "language": "TypeScript", "kind": "constant", "scope": "loadAll", "scopeKind": "function"}, {"_type": "tag", "name": "persistAll", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^function persistAll(notes: Note[]) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^    const raw = window.localStorage.getItem(STORAGE_KEY);$/", "language": "TypeScript", "kind": "constant", "scope": "loadAll", "scopeKind": "function"}, {"_type": "tag", "name": "safeNowIso", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^function safeNowIso(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "sortByUpdatedDesc", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^function sortByUpdatedDesc(a: Note, b: Note) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^    title:$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^export async function updateNote($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const updated = [newNote, ...notes].sort(sortByUpdatedDesc);$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^  const updated: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-173226-173262/notes_frontend/src/services/notesService.ts", "pattern": "/^    updatedAt: safeNowIso(),$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}], "hash": "f57ee24093bda52c52f8ab4b459ae79c", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/services/notesService.ts", "fields": [{"name": "let memoryStore: Note[] = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}